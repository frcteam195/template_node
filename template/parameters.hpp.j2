#pragma once
#include "rclcpp/rclcpp.hpp"
#include <string>
#include <map>
#include <vector>
#include <memory>

typedef struct parameters
{
{% for param_name,type in lang_types.items() %}
    {{type}} {{param_name.replace('__dyn', '')}};
{% endfor %}
} parameters_t;
extern parameters_t Parameters;
void load_parameters(rclcpp::Node* node);

class ParameterizedNode : public rclcpp::Node
{
public:
    ParameterizedNode(std::string node_name);

private:
    rclcpp::node_interfaces::PreSetParametersCallbackHandle::SharedPtr pre_set_handle_;
    rclcpp::node_interfaces::OnSetParametersCallbackHandle::SharedPtr on_set_handle_;
    rclcpp::node_interfaces::PostSetParametersCallbackHandle::SharedPtr post_set_handle_;
};
